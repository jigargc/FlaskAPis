{
	"info": {
		"_postman_id": "43ad76b7-fe00-4a70-bbf1-3faea09b5fd2",
		"name": "posts testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9329922"
	},
	"item": [
		{
			"name": "no data given",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No Data given\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/post",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"post"
					],
					"query": [
						{
							"key": "msg",
							"value": "hello",
							"disabled": true
						}
					]
				},
				"description": "post hello"
			},
			"response": []
		},
		{
			"name": "empty msg",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Empty string error\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.expect(pm.response.text()).to.eql(\"Empty string found\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"msg\": \"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/post",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"post"
					],
					"query": [
						{
							"key": "msg",
							"value": "hello",
							"disabled": true
						}
					]
				},
				"description": "post hello"
			},
			"response": []
		},
		{
			"name": "int msg given",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Number is given insted of string\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.expect(pm.response.text()).to.eql(\"msg must be a string\");",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"msg\": 2}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/post",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"post"
					],
					"query": [
						{
							"key": "msg",
							"value": "hello",
							"disabled": true
						}
					]
				},
				"description": "post hello"
			},
			"response": []
		},
		{
			"name": "try post 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get post 1\", function () {",
							"    if(pm.environment.get(\"id1\")){",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.msg).to.eql(pm.environment.get(\"msg1\"));",
							"        pm.expect(jsonData.timestamp).to.eql(pm.environment.get(\"timestamp1\"));",
							"        pm.expect(jsonData.id).to.eql(pm.environment.get(\"id1\"));",
							"        pm.expect(jsonData.key).to.eql(pm.environment.get(\"key1\"));",
							"        return",
							"    }",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/post/{{id1}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"post",
						"{{id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete post 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get post 1\", function () {",
							"    if(pm.environment.get(\"id1\")){",
							"        pm.expect(pm.response.text()).to.eql(\"Post deleted\");",
							"        pm.environment.unset(\"id1\")",
							"        return",
							"    }",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/post/{{id1}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"post",
						"{{id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "post 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create post 1\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"id1\", jsonData.id);",
							"pm.environment.set(\"timestamp1\", jsonData.timestamp);",
							"pm.environment.set(\"key1\", jsonData.key);",
							"pm.environment.set(\"msg1\", jsonData.msg);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"msg\": \"Hello World!\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/post",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"post"
					],
					"query": [
						{
							"key": "msg",
							"value": "hello",
							"disabled": true
						}
					]
				},
				"description": "post hello"
			},
			"response": []
		},
		{
			"name": "get post 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Post 1 contents correct\", function () {",
							"    if(pm.environment.get(\"id1\")){",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.msg).to.eql(pm.environment.get(\"msg1\"));",
							"        pm.expect(jsonData.timestamp).to.eql(pm.environment.get(\"timestamp1\"));",
							"        pm.expect(jsonData.id).to.eql(pm.environment.get(\"id1\"));",
							"        pm.expect(jsonData.key).to.eql(pm.environment.get(\"key1\"));",
							"        return",
							"    }",
							"    pm.response.to.have.status(404);",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"msg\":\"Hello\"}"
				},
				"url": {
					"raw": "{{url}}/post/{{id1}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"post",
						"{{id1}}"
					]
				},
				"description": "post hello"
			},
			"response": []
		},
		{
			"name": "get post 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get post 2\", function () {",
							"    if(pm.environment.get(\"id2\")){",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.msg).to.eql(pm.environment.get(\"msg2\"));",
							"        pm.expect(jsonData.timestamp).to.eql(pm.environment.get(\"timestamp2\"));",
							"        pm.expect(jsonData.id).to.eql(pm.environment.get(\"id2\"));",
							"        pm.expect(jsonData.key).to.eql(pm.environment.get(\"key2\"));",
							"        return",
							"    }",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/post/{{id2}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"post",
						"{{id2}}"
					]
				},
				"description": "post hello"
			},
			"response": []
		},
		{
			"name": "post 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create post 1\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"id2\", jsonData.id);",
							"pm.environment.set(\"timestamp2\", jsonData.timestamp);",
							"pm.environment.set(\"key2\", jsonData.key);",
							"pm.environment.set(\"msg2\", jsonData.msg);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"msg\": \"Post 2\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/post",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"post"
					],
					"query": [
						{
							"key": "msg",
							"value": "hello",
							"disabled": true
						}
					]
				},
				"description": "post hello"
			},
			"response": []
		},
		{
			"name": "get post 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get post 2\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Post 12contents correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(pm.environment.get(\"msg2\"));",
							"    pm.expect(jsonData.timestamp).to.eql(pm.environment.get(\"timestamp2\"));",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id2\"));",
							"    pm.expect(jsonData.key).to.eql(pm.environment.get(\"key2\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/post/{{id2}}",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"post",
						"{{id2}}"
					]
				},
				"description": "post hello"
			},
			"response": []
		},
		{
			"name": "get post 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get post 1\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Post 1 contents correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(pm.environment.get(\"msg1\"));",
							"    pm.expect(jsonData.timestamp).to.eql(pm.environment.get(\"timestamp1\"));",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id1\"));",
							"    pm.expect(jsonData.key).to.eql(pm.environment.get(\"key1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"msg\":\"Hello\"}"
				},
				"url": {
					"raw": "http://127.0.0.1:5000/post/{{id1}}",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"post",
						"{{id1}}"
					]
				},
				"description": "post hello"
			},
			"response": []
		},
		{
			"name": "delete post 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get post 1\", function () {",
							"    if(pm.environment.get(\"id1\")){",
							"        pm.expect(pm.response.text()).to.eql(\"Post deleted\");",
							"        pm.environment.unset(\"id1\")",
							"        return",
							"    }",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/post/{{id1}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"post",
						"{{id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get post 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Post 1 contents correct\", function () {",
							"    if(pm.environment.get(\"id1\")){",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.msg).to.eql(pm.environment.get(\"msg1\"));",
							"        pm.expect(jsonData.timestamp).to.eql(pm.environment.get(\"timestamp1\"));",
							"        pm.expect(jsonData.id).to.eql(pm.environment.get(\"id1\"));",
							"        pm.expect(jsonData.key).to.eql(pm.environment.get(\"key1\"));",
							"        return",
							"    }",
							"    pm.response.to.have.status(404);",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"msg\":\"Hello\"}"
				},
				"url": {
					"raw": "{{url}}/post/{{id1}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"post",
						"{{id1}}"
					]
				},
				"description": "post hello"
			},
			"response": []
		}
	]
}