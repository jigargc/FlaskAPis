{
	"info": {
		"_postman_id": "ff9f0cf8-12e0-4350-9468-2465d4a350d7",
		"name": "tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9329922"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "user creation test 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create user - Successful\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().username).to.eql(\"john_doe\");",
											"    pm.expect(pm.response.json().name).to.eql(\"John Doe\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"john_doe\",\n    \"name\": \"John Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/user",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "user creation test 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create user - Missing username\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().error).to.eql(\"username not found\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"John Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/user",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "user creation test 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create user - Missing name\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().error).to.eql(\"name not found\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"john_doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/user",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "user creation test 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create user - Invalid username type\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().error).to.eql(\"username must be a string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": 123,\n    \"name\": \"John Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/user",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "user creation test 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create user - Empty username\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().error).to.eql(\"Empty string found\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"\",\n    \"name\": \"John Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/user",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "user creation test 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create user - User already exists\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().error).to.eql(\"User already exists\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"john_doe\",\n    \"name\": \"John Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/user",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "user update test 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update user - Successful\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.text()).to.eql(\"User updated\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"John Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/user/1",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "user update test 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update user - User not found\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(pm.response.json().error).to.eql(\"user not found\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"John Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/user/10000",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user",
										"10000"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "posts",
			"item": [
				{
					"name": "crud",
					"item": [
						{
							"name": "post creation test 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Post Creation\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json()).to.have.property(\"id\")",
											"    pm.expect(pm.response.json()).to.have.property(\"key\");",
											"    pm.environment.set(\"post_key_1\", pm.response.json().key);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\",\n    \"user_id\":1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "post creation test 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Missing User\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().error).to.eql(\"User not found\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\",\n    \"user_id\":99999\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "post creation test 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Empty msg Field\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().error).to.eql(\"Empty string found\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"\",\n    \"user_id\":99999\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "post creation test 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Missing user_id Field\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().error).to.eql(\"user_id not found\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "post creation test 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Missing msg Field\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().error).to.eql(\"msg not found\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "post creation test 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Post Creation\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json()).to.have.property(\"id\")",
											"    pm.expect(pm.response.json()).to.have.property(\"key\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\",\n    \"user_id\":1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "post get test 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Missing Post\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(pm.response.json().error).to.eql(\"post not found\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\",\n    \"user_id\":1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post/999999",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post",
										"999999"
									]
								}
							},
							"response": []
						},
						{
							"name": "post get test 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Post Retrieval\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json()).to.have.property(\"id\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\",\n    \"user_id\":1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post/1",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "post deletion 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Missing Post During Deletion\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(pm.response.json().error).to.eql(\"post not found\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\",\n    \"user_id\":1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post/jfjfjfjfjfjaoeieiei",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post",
										"jfjfjfjfjfjaoeieiei"
									]
								}
							},
							"response": []
						},
						{
							"name": "post creation test 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Post Creation\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json()).to.have.property(\"id\")",
											"    pm.expect(pm.response.json()).to.have.property(\"key\");",
											"    pm.environment.set(\"post_key_1\", pm.response.json().key);",
											"    pm.environment.set(\"post_id_1\", pm.response.json().id);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\",\n    \"user_id\":1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "post deletion 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Missing Post During Deletion\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.text()).to.eql(\"Post deleted\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\",\n    \"user_id\":1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post/{{post_key_1}}",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post",
										"{{post_key_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "post deletion 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Missing Post During Deletion\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(pm.response.json().error).to.eql(\"post not found\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\",\n    \"user_id\":1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post/{{post_key_1}}",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post",
										"{{post_key_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "post get test 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Missing Post\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(pm.response.json().error).to.eql(\"post not found\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Hello\",\n    \"user_id\":1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post/{{post_id_1}}",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post",
										"{{post_id_1}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "query",
					"item": [
						{
							"name": "test1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create user 1 - Successful\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"list_user_1\", pm.response.json().id);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"jigar180\",\n    \"name\": \"John Chhatrala\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/user",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "test2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create user 2 - Successful\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"list_user_2\", pm.response.json().id);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"jigar200\",\n    \"name\": \"Jigar Chhatrala\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/user",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "post1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Post Creation for User 1\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json()).to.have.property(\"id\")",
											"    pm.expect(pm.response.json()).to.have.property(\"key\");",
											"    pm.environment.set(\"post_key_1\", pm.response.json().key);",
											"    pm.environment.set(\"start_t1\",pm.response.json().timestamp);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet culpa impedit, in ipsam nisi numquam sit. Adipisci quisquam quod sequi.\",\n    \"user_id\":{{list_user_1}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "post2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Post Creation for User 1\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json()).to.have.property(\"id\")",
											"    pm.expect(pm.response.json()).to.have.property(\"key\");",
											"    pm.environment.set(\"post_key_1\", pm.response.json().key);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet culpa impedit, in ipsam nisi numquam sit. Adipisci quisquam quod sequi.\",\n    \"user_id\":{{list_user_1}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "post3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Post Creation for User 1\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json()).to.have.property(\"id\")",
											"    pm.expect(pm.response.json()).to.have.property(\"key\");",
											"    pm.environment.set(\"post_key_1\", pm.response.json().key);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet culpa impedit, in ipsam nisi numquam sit. Adipisci quisquam quod sequi.\",\n    \"user_id\":{{list_user_1}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "postu2_4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Post Creation for user 2\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json()).to.have.property(\"id\")",
											"    pm.expect(pm.response.json()).to.have.property(\"key\");",
											"    pm.environment.set(\"post_key_1\", pm.response.json().key);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"The world is full of wonder and excitement, waiting to be explored. From the depths of the ocean to the far reaches of space, there's always something new to discover.\",\n    \"user_id\":{{list_user_2}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "postu2_5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Post Creation for user 2\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json()).to.have.property(\"id\")",
											"    pm.expect(pm.response.json()).to.have.property(\"key\");",
											"    pm.environment.set(\"post_key_1\", pm.response.json().key);",
											"    pm.environment.set(\"end_t1\",pm.response.json().timestamp);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"msg\":\"Whispering winds embrace dancing leaves, painting nature's canvas with hues of gold. Serenity blankets the meadows, as birdsong weaves a symphony of peace. Tranquility beckons, inviting weary souls to find solace amidst life's chaos.\",\n    \"user_id\":{{list_user_2}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{_url}}/post",
									"host": [
										"{{_url}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "getUserPost",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Post Retrieval for user 1\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{_url}}/user/posts/{{list_user_1}}",
									"host": [
										"{{_url}}"
									],
									"path": [
										"user",
										"posts",
										"{{list_user_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "textSearch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Text search \", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().length).to.be.greaterThan(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{_url}}/posts/fullTextSearch?text=wonder",
									"host": [
										"{{_url}}"
									],
									"path": [
										"posts",
										"fullTextSearch"
									],
									"query": [
										{
											"key": "text",
											"value": "wonder"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "textSearch Empty Patameters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Full text search for empty text\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().length).to.be.greaterThan(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{_url}}/posts/fullTextSearch",
									"host": [
										"{{_url}}"
									],
									"path": [
										"posts",
										"fullTextSearch"
									],
									"query": [
										{
											"key": "text",
											"value": "wonder",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "textSearch No result",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Text search no result\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().length).to.be.greaterThan(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{_url}}/posts/fullTextSearch",
									"host": [
										"{{_url}}"
									],
									"path": [
										"posts",
										"fullTextSearch"
									],
									"query": [
										{
											"key": "text",
											"value": "wonder",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "emptyResults in timestap search",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Post Retrieval for timestamp where empty results\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().length).to.be.equal(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{_url}}/posts/dateRange/?start=2023-04-01T00:00:00.000Z&end=2023-04-05T23:59:59.999Z",
									"host": [
										"{{_url}}"
									],
									"path": [
										"posts",
										"dateRange",
										""
									],
									"query": [
										{
											"key": "start",
											"value": "2023-04-01T00:00:00.000Z"
										},
										{
											"key": "end",
											"value": "2023-04-05T23:59:59.999Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "timestamp with in range",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Post Retrieval for timestamp where non empty results\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().length).to.be.greaterThan(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{_url}}/posts/dateRange/?start={{start_t1}}&end={{end_t1}}",
									"host": [
										"{{_url}}"
									],
									"path": [
										"posts",
										"dateRange",
										""
									],
									"query": [
										{
											"key": "start",
											"value": "{{start_t1}}"
										},
										{
											"key": "end",
											"value": "{{end_t1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "timestamp with Only start",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Post Retrieval for timestamp where only start is given\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().length).to.be.greaterThan(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{_url}}/posts/dateRange/?start={{start_t1}}",
									"host": [
										"{{_url}}"
									],
									"path": [
										"posts",
										"dateRange",
										""
									],
									"query": [
										{
											"key": "start",
											"value": "{{start_t1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "timestamp with Only end",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Post Retrieval for timestamp where only end is given\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().length).to.be.greaterThan(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{_url}}/posts/dateRange/?end={{start_t1}}",
									"host": [
										"{{_url}}"
									],
									"path": [
										"posts",
										"dateRange",
										""
									],
									"query": [
										{
											"key": "end",
											"value": "{{start_t1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "timestamp with none of start and end",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Post Retrieval for timestamp where none of start and end is given\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().length).to.be.greaterThan(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{_url}}/posts/dateRange/",
									"host": [
										"{{_url}}"
									],
									"path": [
										"posts",
										"dateRange",
										""
									],
									"query": [
										{
											"key": "end",
											"value": "{{start_t1}}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	]
}